# Nginx reverse proxy for Tradesman Finance
# - Serves static site from /usr/share/nginx/html
# - Proxies API requests to backend service
# - Enables gzip and strong caching for /public assets
# - Adds security headers
# Usage: mount site build to /usr/share/nginx/html and run with this config

user  nginx;
worker_processes  auto;

events { worker_connections  1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;

  # Logging
  access_log  /var/log/nginx/access.log;
  error_log   /var/log/nginx/error.log warn;

  # Performance
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;

  # Gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    application/rss+xml
    font/ttf
    font/otf
    image/svg+xml;

  # Upstream for backend API
  upstream backend_api {
    # Replace with your backend container/service name or IP:PORT
    server backend:3001;
    keepalive 32;
  }

  # Redirect HTTP -> HTTPS (optional, if terminating TLS here)
  server {
    listen 80;
    listen [::]:80;
    server_name tradesmanfinance.co.uk www.tradesmanfinance.co.uk;

    # If behind Cloudflare/ALB doing TLS, you can remove this redirect block
    return 301 https://$host$request_uri;
  }

  # SSL server (if terminating TLS on Nginx)
  # Requires ssl_certificate and ssl_certificate_key to be provisioned
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tradesmanfinance.co.uk www.tradesmanfinance.co.uk;

    # TLS (replace with your certs)
    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_session_timeout  1d;
    ssl_session_cache    shared:MozSSL:10m;
    ssl_session_tickets  off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (enable after confirming TLS works)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Security headers (static resources); API security handled by backend helmet
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy no-referrer always;
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;

    # If you want a global CSP at the edge (ensure alignment with backend helmet CSP)
    # add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; connect-src 'self'; object-src 'none'" always;

    # Root for static site (mount your built site here)
    root /usr/share/nginx/html;
    index index.html;

    # Cache headers for static assets
    location ~* ^/public/(css|js|images)/ {
      expires 30d;
      add_header Cache-Control "public, max-age=2592000, immutable";
      try_files $uri =404;
    }

    # Robots and sitemap
    location = /robots.txt { try_files $uri =404; }
    location = /sitemap.xml { try_files $uri =404; }

    # API proxy
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Important for body parsing + Twilio signature validation to see correct absolute URL
      proxy_set_header X-Original-Host $host;

      proxy_pass http://backend_api;

      # Timeouts
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;

      # Do not cache API
      add_header Cache-Control "no-store" always;
    }

    # Single-page fallbacks or static HTML:
    location / {
      try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
      internal;
      try_files /404.html =404;
    }
  }
}
